{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","helpers/prepareEvents.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","Navbar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","prepareEvents","events","map","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aaa26c9b.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n\n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Logout event',\n\n\n    evetStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n\n\n\n}","import { fetchSinToken, fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport Swal from 'sweetalert2';\n\n\n\nexport const startLogin = ( email, password ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );// para saber cuanto tiempo falta en experirar el token\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n        \n\n    }\n}\n\nexport const startRegister = ( email, password, name ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n\n    }\n}\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n\n        const resp = await fetchConToken( 'auth/renew' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            dispatch( checkingFinish() );\n        }\n    }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\n\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n\n        localStorage.clear();\n        dispatch( logout() );\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })","\nimport { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport Swal from 'sweetalert2';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    \n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: 'cecilia@gmail.com',\n        lPassword: '123456'\n    });\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName: 'Carmen',\n        rEmail: 'carmen@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456'\n    });\n    \n    const { lEmail, lPassword } = formLoginValues;\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const handleLogin = ( e ) => {\n        e.preventDefault();\n        dispatch( startLogin( lEmail, lPassword ) );\n    }\n\n    const handleRegister = ( e ) => {\n        e.preventDefault();\n\n        if ( rPassword1 !== rPassword2 ) {\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales','error');\n        }\n        console.log('?')\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={ handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={ rName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={ rEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword1\"\n                                value={ rPassword1 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value={ rPassword2 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector( state => state.auth );\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n        <span className=\"navbar-brand\">\n        { name }\n        </span>\n        \n        <button className=\"btn btn-outline-danger\"  onClick={ handleLogout }>\n            <i className=\"fas fa-sign-out-alt\"></i>\n            <span> Salir</span>\n        </button>\n\n    </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({event}) => {\n\n    const { title, user } = event;\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import moment from 'moment'\n\n\nexport const prepareEvents = ( events = [] ) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n            start: moment( e.start ).toDate(),\n        })\n    );\n\n}","import Swal from 'sweetalert2';\n\nimport { types } from '../types/types';\nimport { fetchConToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\n\n\nexport const eventStartAddNew = ( event ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            console.log(body)\n\n            if ( body.ok ) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log( event );\n                dispatch( eventAddNew( event ) );\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        \n\n    }\n}\n\n const eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\n\n\nexport const eventStartUpdate = ( event ) => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventUpdated( event ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\nexport const eventStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken( 'events' );\n            const body = await resp.json();\n\n            const events = prepareEvents( body.eventos );\n            dispatch( eventLoaded( events ) );\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate} from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');//una hora mas \n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n        \n        //validacion del formalurio\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdate( formValues ) )\n        } else {\n            dispatch( eventStartAddNew(formValues) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n\n                    <label>Fecha y hora inicio</label>\n\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n\n                </div>\n\n                <div className=\"form-group\">\n\n                    <label>Fecha y hora fin</label>\n\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\n\nmoment.locale('es');\nconst localizer = momentLocalizer(moment);\n\n\nexport const CalendarScreen = () => {\n\n  const dispatch = useDispatch();\n  const { events, activeEvent } = useSelector( state => state.calendar );\n  const { uid } = useSelector( state => state.auth );\n\n  const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n\n  useEffect(() => {\n        \n    dispatch( eventStartLoading() );\n\n}, [ dispatch ])\n\n  const onDoubleClick = (e) => {\n    // console.log(e);\n   dispatch( uiOpenModal() );\n}\n\n\nconst onSelectEvent = (e) => {\n dispatch( eventSetActive( e ) );\n}\n\nconst onViewChange = (e) => {\n  setLastView(e);\n  localStorage.setItem('lastView', e);\n}\n\nconst onSelectSlot = (e) => {\n   //console.log(e)\n  dispatch( eventClearActiveEvent() );\n}\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n\n    const style = {\n      backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\n      borderRadius: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white'\n    }\n\n\n    return {\n      style\n    }\n  };\n  return (\n\n    <div  className=\"calendar-screen\">\n      <Navbar />\n\n\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={messages}\n        eventPropGetter={eventStyleGetter}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelectEvent}\n        onView={onViewChange}\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        view={lastView}\n        components={{\n          event: CalendarEvent\n        }}\n      />\n       <AddNewFab />\n       {\n                (activeEvent) && <DeleteEventFab />\n      }\n\n      <CalendarModal />\n    </div>\n  )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector( state => state.auth);\n\n    useEffect(() => {\n        \n        dispatch( startChecking() );\n\n    }, [dispatch])\n\n    if ( checking ) {\n        return (<h5>Espere...</h5>);\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={!!uid}/>\n                    <PrivateRoute exact path=\"/\" component={CalendarScreen}  isAuthenticated={!!uid}/>\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","//import moment from 'moment';\n\nimport { types } from '../types/types';\n\n/*{\n    id: new Date().getTime(),\n    title: 'Cumpleaños del jefe',\n    start: moment().toDate(),\n    end: moment().add( 2, 'hours' ).toDate(),\n    notes: 'Comprar el pastel',\n    user: {\n        _id: '123',\n        name: 'Fernando'\n    }*/\n\nconst initialState = {\n    events: [\n    ],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => (e.id === action.payload.id) ? action.payload : e\n                )\n            }\n\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => (e.id !== state.activeEvent.id)\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload]\n            }\n\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n\n}","import { types } from '../types/types';\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n\n        default:\n            return state;\n    }\n\n}","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n","import React from 'react'\nimport { AppRouter } from './router/AppRouter';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n           <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\n//console.log(process.env.REACT_APP_API_URL);\nReactDOM.render(\n \n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}